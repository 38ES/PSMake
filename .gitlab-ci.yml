include:
  - project: 688cw/38ceig/automation/ci-cd-templates
    ref: main
    file: PowerShell/PowerShell.gitlab-ci.yml

variables:
  PESTER_MAJOR_VERSION: 5

default:
  image:
    name: registry.90cos.cdl.af.mil/688cw/38ceig/automation/docker-ceig-development-image:v2.6
    entrypoint: ["/bin/bash", "-c"]

stages:
  - .pre
  - build
  - test
  - deploy
  - deploy-docker
  - trigger

PowerShell Test:
  stage: test
  needs: ["PowerShell Setup"]
  coverage: /Covered (\d+\.\d+%)/
  script:
    - pwsh -Command "{Import-Module Pester -MinimumVersion $PESTER_MAJOR_VERSION.0 -MaximumVersion $PESTER_MAJOR_VERSION.99 -ErrorAction Stop; Invoke-Pester -Configuration (Import-PowerShellDataFile .\Pester5Configuration-cicd.psd1)}.Invoke()"
  after_script: []
  artifacts:
    when: always
    untracked: false
    expire_in: 30 days
    paths:
      - PesterTestsReport.xml
      - CodeCoverageReport.xml
      - cobertura-coverage.xml
    reports:
      junit: PesterTestsReport.xml

.register-repository: &register-repository
  - echo "Repository registered in v2.6 of base image"

PowerShell Test Coverage:
  stage: test
  needs: ["PowerShell Test"]
  image: haynes/jacoco2cobertura:1.0.7
  script:
    - python3 /opt/cover2cover.py $CI_PROJECT_DIR/CodeCoverageReport.xml $CI_PROJECT_DIR/functions/ > $CI_PROJECT_DIR/cobertura-coverage.xml
  artifacts:
    untracked: false
    when: on_success
    expire_in: "30 days"
    reports:
      coverage_report:
        coverage_format: cobertura
        path: $CI_PROJECT_DIR/cobertura-coverage.xml

# Docker build job template used for making seperate jobs for Release and PreRelease
.build-docker: &build-docker
  image:
    name: quay.io/buildah/stable
  variables:
    STORAGE_DRIVER: vfs
  before_script:
    - cp /etc/gitlab-runner/certs/ca.crt /etc/pki/ca-trust/source/anchors/
    - update-ca-trust enable
    - update-ca-trust extract
    - buildah login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - buildah bud -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" --format docker .
    - buildah push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"

Build And Publish Docker Image:
  stage: deploy-docker
  rules:
    - if: '$CI_COMMIT_TAG'
  needs: ['PowerShell Publish Release']
  <<: *build-docker
